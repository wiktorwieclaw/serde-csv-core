on:
  push:
    branches: [ main ]
  pull_request:

name: CI

env:
  RUSTFLAGS: '--deny warnings'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
        target: [x86_64-unknown-linux-gnu]

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.TARGET }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target=${{ matrix.TARGET }} --all-features
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
        target: [x86_64-unknown-linux-gnu]

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.TARGET }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target=${{ matrix.TARGET }} --all-features
  fmt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
        target: [x86_64-unknown-linux-gnu]

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.TARGET }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
  clippy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
        target: [x86_64-unknown-linux-gnu]

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.TARGET }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features
  docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
        target: [x86_64-unknown-linux-gnu]

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.TARGET }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features